# -*- coding: utf-8 -*-
"""EmailPrediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JSJDTpZatUAHRxoZdXi_PFECTfbVpx8d
"""

import pandas as pd
df=pd.read_csv('emails.csv')

df.shape

df.head()

#input data
x=df.drop(['Email No.','Prediction'],axis=1)

#output data
y=df['Prediction']

x.shape
set(x.dtypes)

import seaborn as sns

sns.countplot(x=y)

y.value_counts()

#feature scaling

from sklearn.preprocessing import MinMaxScaler

scaler=MinMaxScaler()
x_scaled=scaler.fit_transform(x)

x_scaled

#cross validation

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test = train_test_split(x_scaled,y,random_state=0,test_size=0.2)

from sklearn.neighbors import KNeighborsClassifier

knn=KNeighborsClassifier(n_neighbors=5)

knn.fit(x_train,y_train)

y_predict=knn.predict(x_test)

from sklearn.metrics import ConfusionMatrixDisplay,accuracy_score,classification_report

ConfusionMatrixDisplay.from_predictions(y_test,y_predict)

y_test.value_counts()

accuracy_score(y_test,y_predict)

print(classification_report(y_test,y_predict))

from sklearn.svm import SVC

svm=SVC(kernel='linear')

svm.fit(x_train,y_train)

y_pred=svm.predict(x_test)

accuracy_score(y_test,y_pred)

ConfusionMatrixDisplay.from_predictions(y_test,y_pred)

svm=SVC(kernel='rbf')

svm.fit(x_train,y_train)

y_pred=svm.predict(x_test)

svm=SVC(kernel='poly')

svm.fit(x_train,y_train)

y_pred=svm.predict(x_test)